Loading LLM...

Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]
Loading checkpoint shards:  50%|█████     | 1/2 [00:02<00:02,  2.43s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:03<00:00,  1.49s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:03<00:00,  1.63s/it]
LLM loaded

ARGUMENTS:
output_dir: data/gen_res
llm_id: meta-llama/Llama-2-7b-chat-hf
model_max_length: 4096
load_full_corpus: False
use_random: False
use_adore: False
gold_position: 5
num_documents_in_context: 11
get_documents_without_answer: True
max_new_tokens: 15
batch_size: 18
save_every: 250
filtering_threshold: 0.5
seed: 10

Loading corpus and search results...
Corpus and search results loaded
Loading prompt dataset...
Example 0
Starting from v4.46, the `logits` model output will have the same type as the model (except at train time, where it will always be FP32)
Warning: No valid JSON found in LLM response.
{
            "index": 1,
            "score": 0.7
         },
         {
            "index": 2,
            "score": 0.3
         },
         {
            "index": 3,
            "score": 0.5
         },
         {
            "index": 4,
            "score": 0.1
         },
         {
            "index": 5,
            "score": 0.9
         },
         {
            "index": 6,
            "score": 0.8
         },
         {
            "index": 7,
            "score": 0.4
         },
         {
            "index": 8,
            "score": 0.6
         },
         {
            "index": 9,
            "score": 0.3
         },
         {
            "index": 10,
            "score": 0.2
         },
         {
            "index": 11,
            "score": 0.5
         }

Explanation:
The given documents are a mix of relevant and irrelevant documents for the query "total number of death row inmates in the us". Documents 1, 5, 7, and 9 are likely to contain useful information for the query, while documents 2
Example 1
Sorted Documents: [4, 0, 10, 7, 2, 9, 6, 1, 8, 5, 3]
Removed Distracting Documents: [4, 0, 10, 7, 2, 9]
Final Improved Documents: [6, 1, 8, 5, 3]


Example 2
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 3
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 8, 9, 3]


Example 4
Sorted Documents: [9, 8, 1, 7, 6, 5, 10, 4, 0, 2, 3]
Removed Distracting Documents: [9, 8, 1, 7, 6, 5]
Final Improved Documents: [10, 4, 0, 2, 3]


Example 5
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2]
Final Improved Documents: [10, 7, 1, 9, 5, 3]


Example 6
Sorted Documents: [4, 0, 6, 2, 9, 10, 7, 1, 8, 3, 5]
Removed Distracting Documents: [4, 0, 6, 2, 9]
Final Improved Documents: [10, 7, 1, 8, 3, 5]


Example 7
Sorted Documents: [4, 5, 0, 6, 2, 10, 7, 1, 9, 8, 3]
Removed Distracting Documents: [4, 5, 0, 6, 2]
Final Improved Documents: [10, 7, 1, 9, 8, 3]


Example 8
Sorted Documents: [8, 4, 1, 6, 3, 10, 5, 0, 7, 2, 9]
Removed Distracting Documents: [8, 4, 1, 6, 3]
Final Improved Documents: [10, 5, 0, 7, 2, 9]


Example 9
Sorted Documents: [3, 10, 5, 0, 7, 4, 6, 1, 9, 8, 2]
Removed Distracting Documents: [3, 10, 5, 0, 7, 4]
Final Improved Documents: [6, 1, 9, 8, 2]


Example 10
Warning: No valid JSON found in LLM response.
{
            "index": 1,
            "score": 0.7
         },
         {
            "index": 2,
            "score": 0.3
         },
         {
            "index": 3,
            "score": 0.5
         },
         {
            "index": 4,
            "score": 0.2
         },
         {
            "index": 5,
            "score": 0.4
         },
         {
            "index": 6,
            "score": 0.6
         },
         {
            "index": 7,
            "score": 0.1
         },
         {
            "index": 8,
            "score": 0.8
         },
         {
            "index": 9,
            "score": 0.3
         },
         {
            "index": 10,
            "score": 0.5
         },
         {
            "index": 11,
            "score": 0.7
         }

Explanation:

* Each document is assigned a score between 0 and 1, indicating how likely it is to contain the correct answer. A score of 0 indicates that the document is unlikely to contain the correct answer, while a score of 1 indicates that it is very likely
Example 11
Sorted Documents: [7, 5, 1, 3, 4, 10, 2, 0, 9, 6, 8]
Removed Distracting Documents: [7, 5, 1, 3, 4, 10]
Final Improved Documents: [2, 0, 9, 6, 8]


Example 12
Sorted Documents: [5, 2, 0, 4, 7, 10, 3, 1, 9, 8, 6]
Removed Distracting Documents: [5, 2, 0, 4, 7]
Final Improved Documents: [10, 3, 1, 9, 8, 6]


Example 13
Sorted Documents: [10, 4, 0, 7, 2, 9, 6, 1, 8, 3, 5]
Removed Distracting Documents: [10, 4, 0, 7, 2, 9]
Final Improved Documents: [6, 1, 8, 3, 5]


Example 14
Sorted Documents: [0, 6, 2, 8, 10, 4, 1, 7, 3, 5, 9]
Removed Distracting Documents: [0, 6, 2, 8]
Final Improved Documents: [10, 4, 1, 7, 3, 5, 9]


Example 15
Sorted Documents: [5, 4, 1, 3, 6, 10, 2, 0, 9, 7, 8]
Removed Distracting Documents: [5, 4, 1, 3, 6]
Final Improved Documents: [10, 2, 0, 9, 7, 8]


Example 16
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 17
Sorted Documents: [4, 6, 0, 9, 2, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 9, 2]
Final Improved Documents: [10, 8, 1, 7, 5, 3]


Example 18
Sorted Documents: [0, 2, 6, 1, 3, 4, 5, 7, 8, 9, 10]
Removed Distracting Documents: [0, 2, 6]
Final Improved Documents: [1, 3, 4, 5, 7, 8, 9, 10]


Example 19
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 20
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 21
Sorted Documents: [4, 10, 6, 0, 8, 2, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 10, 6, 0, 8, 2]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 22
Sorted Documents: [4, 6, 0, 9, 2, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 9, 2]
Final Improved Documents: [10, 8, 1, 7, 5, 3]


Example 23
Sorted Documents: [4, 1, 9, 7, 3, 10, 6, 0, 8, 2, 5]
Removed Distracting Documents: [4, 1, 9, 7, 3, 10]
Final Improved Documents: [6, 0, 8, 2, 5]


Example 24
Sorted Documents: [9, 7, 0, 5, 2, 4, 10, 1, 8, 3, 6]
Removed Distracting Documents: [9, 7, 0, 5, 2]
Final Improved Documents: [4, 10, 1, 8, 3, 6]


Example 25
Warning: No valid JSON found in LLM response.
{
            "index": 1,
            "score": 0.7
         },
         {
            "index": 2,
            "score": 0.3
         },
         {
            "index": 3,
            "score": 0.5
         },
         {
            "index": 4,
            "score": 0.1
         },
         {
            "index": 5,
            "score": 0.8
         },
         {
            "index": 6,
            "score": 0.4
         },
         {
            "index": 7,
            "score": 0.6
         },
         {
            "index": 8,
            "score": 0.2
         },
         {
            "index": 9,
            "score": 0.3
         },
         {
            "index": 10,
            "score": 0.9
         },
         {
            "index": 11,
            "score": 0.5
         }

Explanation:

* Document 1: Score = 0.7. This document contains information about Catherine Earnshaw, but does not provide any insight into the query. Therefore, the score is set to 0.7, indicating that it is unlikely to be a
Example 26
Sorted Documents: [4, 5, 0, 6, 2, 7, 1, 9, 8, 3, 10]
Removed Distracting Documents: [4, 5, 0, 6, 2]
Final Improved Documents: [7, 1, 9, 8, 3, 10]


Example 27
Warning: No valid JSON found in LLM response.
{
            "index": 1,
            "score": 0.7
         },
         {
            "index": 2,
            "score": 0.3
         },
         {
            "index": 3,
            "score": 0.5
         },
         {
            "index": 4,
            "score": 0.1
         },
         {
            "index": 5,
            "score": 0.9
         },
         {
            "index": 6,
            "score": 0.2
         },
         {
            "index": 7,
            "score": 0.8
         },
         {
            "index": 8,
            "score": 0.4
         },
         {
            "index": 9,
            "score": 0.6
         },
         {
            "index": 10,
            "score": 0.5
         },
         {
            "index": 11,
            "score": 0.9
         }

Explanation:

* Each document is assigned a score between 0 and 1 based on how likely it is to contain the correct answer. A score of 0 indicates that the document is unlikely to contain the correct answer, while a score of 1 indicates that the document is very
Example 28
Warning: No valid JSON found in LLM response.
{
            "document_1": 0.7,
            "document_2": 0.3,
            "document_3": 0.5,
            "document_4": 0.2,
            "document_5": 0.4,
            "document_6": 0.1,
            "document_7": 0.8,
            "document_8": 0.6,
            "document_9": 0.9,
            "document_10": 0.3,
            "document_11": 0.4
         }

Explanation:

* Each document is assigned a score between 0 and 1, indicating how likely it is to contain distracting information related to the query. A score of 0 indicates very likely that the document contains distracting information, while a score of 1 indicates very unlikely.
* Documents 1, 2, and 4 are likely to contain distracting information related to the query, with scores of 0.7, 0.3, and 0.2, respectively.
* Documents 3, 5, 6, 8, and 10 are less likely to contain distracting information related to the query, with scores of 0.5, 0.4, 0.1, 0.6, and 0.3, respectively.
Example 29
Sorted Documents: [7, 3, 1, 9, 5, 6, 4, 0, 10, 2, 8]
Removed Distracting Documents: [7, 3, 1, 9, 5, 6]
Final Improved Documents: [4, 0, 10, 2, 8]


Example 30
Sorted Documents: [0, 3, 4, 9, 10, 1, 5, 2, 8, 6, 7]
Removed Distracting Documents: [0, 3, 4, 9]
Final Improved Documents: [10, 1, 5, 2, 8, 6, 7]


Example 31
Sorted Documents: [4, 1, 9, 7, 3, 10, 6, 0, 8, 2, 5]
Removed Distracting Documents: [4, 1, 9, 7, 3, 10]
Final Improved Documents: [6, 0, 8, 2, 5]


Example 32
Sorted Documents: [7, 5, 1, 9, 3, 10, 4, 2, 0, 6, 8]
Removed Distracting Documents: [7, 5, 1, 9, 3, 10, 4]
Final Improved Documents: [2, 0, 6, 8]


Example 33
Sorted Documents: [0, 6, 2, 8, 4, 10, 1, 7, 3, 5, 9]
Removed Distracting Documents: [0, 6, 2, 8]
Final Improved Documents: [4, 10, 1, 7, 3, 5, 9]


Example 34
Sorted Documents: [9, 5, 0, 7, 2, 10, 6, 1, 8, 4, 3]
Removed Distracting Documents: [9, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 8, 4, 3]


Example 35
Sorted Documents: [5, 8, 2, 9, 6, 1, 3, 4, 7, 10, 0]
Removed Distracting Documents: [5, 8, 2, 9, 6]
Final Improved Documents: [1, 3, 4, 7, 10, 0]


Example 36
Sorted Documents: [0, 1, 2, 3, 4, 9, 10, 5, 6, 7, 8]
Removed Distracting Documents: [0, 1, 2, 3, 4]
Final Improved Documents: [9, 10, 5, 6, 7, 8]


Example 37
Sorted Documents: [3, 5, 7, 1, 9, 10, 6, 0, 8, 4, 2]
Removed Distracting Documents: [3, 5, 7, 1, 9]
Final Improved Documents: [10, 6, 0, 8, 4, 2]


Example 38
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 9, 3]


Example 39
Sorted Documents: [8, 2, 10, 1, 3, 4, 5, 7, 9, 0, 6]
Removed Distracting Documents: [8, 2, 10]
Final Improved Documents: [1, 3, 4, 5, 7, 9, 0, 6]


Example 40
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2]
Final Improved Documents: [10, 7, 1, 9, 5, 3]


Example 41
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 42
Sorted Documents: [4, 9, 5, 0, 7, 2, 10, 6, 1, 8, 3]
Removed Distracting Documents: [4, 9, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 8, 3]


Example 43
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 44
Sorted Documents: [5, 4, 0, 6, 2, 10, 7, 1, 8, 9, 3]
Removed Distracting Documents: [5, 4, 0, 6, 2, 10]
Final Improved Documents: [7, 1, 8, 9, 3]


Example 45
Sorted Documents: [8, 4, 1, 7, 3, 10, 6, 0, 9, 2, 5]
Removed Distracting Documents: [8, 4, 1, 7, 3]
Final Improved Documents: [10, 6, 0, 9, 2, 5]


Example 46
Sorted Documents: [7, 5, 1, 3, 4, 10, 2, 0, 8, 6, 9]
Removed Distracting Documents: [7, 5, 1, 3, 4]
Final Improved Documents: [10, 2, 0, 8, 6, 9]


Example 47
Sorted Documents: [3, 7, 0, 5, 9, 4, 8, 10, 1, 6, 2]
Removed Distracting Documents: [3, 7, 0, 5, 9, 4, 8]
Final Improved Documents: [10, 1, 6, 2]


Example 48
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 9, 3]


Example 49
Sorted Documents: [10, 2, 8, 1, 4, 6, 0, 7, 3, 5, 9]
Removed Distracting Documents: [10, 2, 8]
Final Improved Documents: [1, 4, 6, 0, 7, 3, 5, 9]


Example 50
Sorted Documents: [4, 6, 0, 9, 2, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 9, 2, 10]
Final Improved Documents: [8, 1, 7, 5, 3]


Example 51
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 52
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 9, 8, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 9, 8, 3]


Example 53
Sorted Documents: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Removed Distracting Documents: []
Final Improved Documents: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


Example 54
Sorted Documents: [7, 5, 1, 3, 4, 10, 2, 0, 8, 6, 9]
Removed Distracting Documents: [7, 5, 1, 3, 4]
Final Improved Documents: [10, 2, 0, 8, 6, 9]


Example 55
Sorted Documents: [9, 5, 0, 7, 2, 10, 6, 1, 8, 3, 4]
Removed Distracting Documents: [9, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 8, 3, 4]


Example 56
Warning: No valid JSON found in LLM response.
{
            "index": 1,
            "score": 0.7
         },
         {
            "index": 2,
            "score": 0.3
         },
         {
            "index": 3,
            "score": 0.5
         },
         {
            "index": 4,
            "score": 0.2
         },
         {
            "index": 5,
            "score": 0.8
         },
         {
            "index": 6,
            "score": 0.1
         },
         {
            "index": 7,
            "score": 0.9
         },
         {
            "index": 8,
            "score": 0.5
         },
         {
            "index": 9,
            "score": 0.3
         },
         {
            "index": 10,
            "score": 0.7
         },
         {
            "index": 11,
            "score": 0.6
         }

Explanation:

* Document 1 is likely to be a distracting document for the query "what is the rank of india in the richest country". It does not provide any information related to the query and contains irrelevant information about the Global Peace Index and the economy of India
Example 57
Sorted Documents: [4, 0, 7, 2, 9, 10, 6, 1, 8, 5, 3]
Removed Distracting Documents: [4, 0, 7, 2, 9]
Final Improved Documents: [10, 6, 1, 8, 5, 3]


Example 58
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 59
Sorted Documents: [10, 4, 0, 6, 2, 9, 5, 1, 8, 7, 3]
Removed Distracting Documents: [10, 4, 0, 6, 2, 9]
Final Improved Documents: [5, 1, 8, 7, 3]


Example 60
Sorted Documents: [4, 6, 0, 8, 2, 7, 10, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2]
Final Improved Documents: [7, 10, 1, 9, 5, 3]


Example 61
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2]
Final Improved Documents: [10, 7, 1, 9, 5, 3]


Example 62
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 9, 8, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 9, 8, 3]


Example 63
Sorted Documents: [4, 1, 6, 3, 9, 10, 7, 0, 8, 2, 5]
Removed Distracting Documents: [4, 1, 6, 3, 9]
Final Improved Documents: [10, 7, 0, 8, 2, 5]


Example 64
Sorted Documents: [8, 4, 0, 6, 2, 10, 5, 1, 9, 3, 7]
Removed Distracting Documents: [8, 4, 0, 6, 2]
Final Improved Documents: [10, 5, 1, 9, 3, 7]


Example 65
Sorted Documents: [4, 6, 0, 2, 9, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 2, 9]
Final Improved Documents: [10, 8, 1, 7, 5, 3]


Example 66
Sorted Documents: [2, 4, 0, 6, 3, 10, 5, 1, 7, 8, 9]
Removed Distracting Documents: [2, 4, 0, 6, 3]
Final Improved Documents: [10, 5, 1, 7, 8, 9]


Example 67
Sorted Documents: [6, 5, 1, 7, 3, 8, 4, 9, 10, 2, 0]
Removed Distracting Documents: [6, 5, 1, 7, 3, 8, 4, 9]
Final Improved Documents: [10, 2, 0]


Example 68
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 8, 9, 3]


Example 69
Sorted Documents: [4, 0, 7, 2, 5, 9, 10, 1, 8, 3, 6]
Removed Distracting Documents: [4, 0, 7, 2, 5, 9]
Final Improved Documents: [10, 1, 8, 3, 6]


Example 70
Sorted Documents: [9, 7, 0, 5, 2, 10, 4, 1, 8, 3, 6]
Removed Distracting Documents: [9, 7, 0, 5, 2]
Final Improved Documents: [10, 4, 1, 8, 3, 6]


Example 71
Sorted Documents: [0, 1, 4, 5, 2, 9, 3, 8, 6, 10, 7]
Removed Distracting Documents: [0]
Final Improved Documents: [1, 4, 5, 2, 9, 3, 8, 6, 10, 7]


Example 72
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 8, 9, 3]


Example 73
Sorted Documents: [4, 6, 0, 9, 2, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 9, 2]
Final Improved Documents: [10, 8, 1, 7, 5, 3]


Example 74
Sorted Documents: [5, 4, 1, 7, 3, 6, 10, 2, 9, 0, 8]
Removed Distracting Documents: [5, 4, 1, 7, 3, 6]
Final Improved Documents: [10, 2, 9, 0, 8]


Example 75
Sorted Documents: [2, 5, 0, 8, 4, 10, 7, 1, 9, 6, 3]
Removed Distracting Documents: [2, 5, 0, 8, 4]
Final Improved Documents: [10, 7, 1, 9, 6, 3]


Example 76
Sorted Documents: [2, 5, 0, 7, 4, 10, 8, 1, 9, 6, 3]
Removed Distracting Documents: [2, 5, 0, 7, 4]
Final Improved Documents: [10, 8, 1, 9, 6, 3]


Example 77
Sorted Documents: [9, 4, 0, 6, 2, 10, 5, 1, 8, 7, 3]
Removed Distracting Documents: [9, 4, 0, 6, 2]
Final Improved Documents: [10, 5, 1, 8, 7, 3]


Example 78
Sorted Documents: [7, 1, 3, 4, 10, 2, 9, 0, 8, 5, 6]
Removed Distracting Documents: [7, 1, 3, 4, 10]
Final Improved Documents: [2, 9, 0, 8, 5, 6]


Example 79
Sorted Documents: [4, 1, 9, 7, 3, 10, 6, 0, 8, 2, 5]
Removed Distracting Documents: [4, 1, 9, 7, 3]
Final Improved Documents: [10, 6, 0, 8, 2, 5]


Example 80
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 9, 3]


Example 81
Sorted Documents: [4, 0, 6, 2, 9, 10, 7, 1, 8, 3, 5]
Removed Distracting Documents: [4, 0, 6, 2, 9]
Final Improved Documents: [10, 7, 1, 8, 3, 5]


Example 82
Sorted Documents: [4, 10, 6, 0, 8, 2, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 10, 6, 0, 8, 2]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 83
Sorted Documents: [4, 10, 5, 0, 7, 2, 6, 1, 9, 8, 3]
Removed Distracting Documents: [4, 10, 5, 0, 7, 2]
Final Improved Documents: [6, 1, 9, 8, 3]


Example 84
Sorted Documents: [4, 0, 10, 6, 2, 9, 5, 1, 8, 7, 3]
Removed Distracting Documents: [4, 0, 10, 6, 2, 9]
Final Improved Documents: [5, 1, 8, 7, 3]


Example 85
Warning: No valid JSON found in LLM response.
{
            "document_1": 0.7,
            "document_2": 0.3,
            "document_3": 0.5,
            "document_4": 0.2,
            "document_5": 0.8,
            "document_6": 0.4,
            "document_7": 0.6,
            "document_8": 0.1,
            "document_9": 0.9,
            "document_10": 0.5,
            "document_11": 0.9
         }

Explanation:

* Document 1 is likely to be a distracting document for the query "what is the line in the middle of a time zone that in theory determines the time of that zone". It contains information on time zones and their boundaries, but does not directly address the query. Score: 0.7
* Document 2 is unlikely to be a distracting document for the query. It contains information on time zones and their boundaries, but also discusses the reasons for time zone boundaries being located far to the west of their meridians. Score: 0.3
* Document 3 is likely to be a distracting document for the query. It contains information on time zone boundaries and their locations, but does not directly address the query. Score: 0.5
* Document 4
Example 86
Sorted Documents: [8, 7, 0, 9, 5, 1, 3, 4, 6, 10, 2]
Removed Distracting Documents: [8, 7, 0, 9, 5]
Final Improved Documents: [1, 3, 4, 6, 10, 2]


Example 87
Sorted Documents: [7, 0, 5, 2, 9, 10, 4, 1, 8, 3, 6]
Removed Distracting Documents: [7, 0, 5, 2, 9]
Final Improved Documents: [10, 4, 1, 8, 3, 6]


Example 88
Sorted Documents: [7, 5, 1, 3, 10, 4, 2, 0, 9, 6, 8]
Removed Distracting Documents: [7, 5, 1, 3, 10, 4]
Final Improved Documents: [2, 0, 9, 6, 8]


Example 89
Warning: No valid JSON found in LLM response.
{
            "index": 1,
            "score": 0.7
         },
         {
            "index": 2,
            "score": 0.3
         },
         {
            "index": 3,
            "score": 0.5
         },
         {
            "index": 4,
            "score": 0.1
         },
         {
            "index": 5,
            "score": 0.9
         },
         {
            "index": 6,
            "score": 0.8
         },
         {
            "index": 7,
            "score": 0.4
         },
         {
            "index": 8,
            "score": 0.6
         },
         {
            "index": 9,
            "score": 0.2
         },
         {
            "index": 10,
            "score": 0.3
         },
         {
            "index": 11,
            "score": 0.1
         }

Explanation:

* Document 1 has a low score (0.7) because it does not mention the Passion of Christ directly, instead focusing on the title "The Passion of the Christ".
* Document 2 has a moderate score (0.3)
Example 90
Sorted Documents: [4, 0, 7, 2, 5, 8, 10, 1, 6, 3, 9]
Removed Distracting Documents: [4, 0, 7, 2, 5, 8]
Final Improved Documents: [10, 1, 6, 3, 9]


Example 91
Sorted Documents: [6, 1, 3, 4, 9, 10, 2, 8, 0, 7, 5]
Removed Distracting Documents: [6, 1, 3, 4, 9]
Final Improved Documents: [10, 2, 8, 0, 7, 5]


Example 92
Sorted Documents: [7, 1, 3, 4, 10, 2, 9, 0, 8, 5, 6]
Removed Distracting Documents: [7, 1, 3, 4]
Final Improved Documents: [10, 2, 9, 0, 8, 5, 6]


Example 93
Sorted Documents: [1, 6, 4, 10, 2, 8, 0, 7, 3, 5, 9]
Removed Distracting Documents: [1, 6, 4, 10]
Final Improved Documents: [2, 8, 0, 7, 3, 5, 9]


Example 94
Warning: No valid JSON found in LLM response.
{
            "index": 3,
            "score": 0.7
         },
         {
            "index": 1,
            "score": 0.3
         },
         {
            "index": 7,
            "score": 0.5
         },
         {
            "index": 9,
            "score": 0.2
         },
         {
            "index": 10,
            "score": 0.8
         },
         {
            "index": 11,
            "score": 0.4
         },
         {
            "index": 6,
            "score": 0.6
         },
         {
            "index": 8,
            "score": 0.3
         },
         {
            "index": 5,
            "score": 0.5
         }
      ]
Example 95
Sorted Documents: [7, 3, 1, 10, 5, 6, 4, 0, 9, 2, 8]
Removed Distracting Documents: [7, 3, 1, 10, 5, 6]
Final Improved Documents: [4, 0, 9, 2, 8]


Example 96
Sorted Documents: [0, 2, 5, 1, 3, 4, 10, 6, 7, 8, 9]
Removed Distracting Documents: [0, 2, 5]
Final Improved Documents: [1, 3, 4, 10, 6, 7, 8, 9]


Example 97
Sorted Documents: [4, 0, 6, 2, 9, 10, 5, 1, 8, 7, 3]
Removed Distracting Documents: [4, 0, 6, 2, 9]
Final Improved Documents: [10, 5, 1, 8, 7, 3]


Example 98
Sorted Documents: [10, 3, 1, 9, 5, 7, 4, 0, 8, 2, 6]
Removed Distracting Documents: [10, 3, 1, 9, 5, 7]
Final Improved Documents: [4, 0, 8, 2, 6]


Example 99
Sorted Documents: [7, 0, 9, 5, 1, 3, 4, 8, 2, 10, 6]
Removed Distracting Documents: [7, 0, 9, 5]
Final Improved Documents: [1, 3, 4, 8, 2, 10, 6]


Example 100
Sorted Documents: [8, 4, 0, 6, 2, 10, 5, 1, 9, 7, 3]
Removed Distracting Documents: [8, 4, 0, 6, 2, 10]
Final Improved Documents: [5, 1, 9, 7, 3]


Example 101
Sorted Documents: [9, 5, 0, 7, 2, 10, 6, 1, 8, 4, 3]
Removed Distracting Documents: [9, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 4, 3]


Example 102
Sorted Documents: [4, 10, 0, 7, 2, 5, 9, 1, 8, 3, 6]
Removed Distracting Documents: [4, 10, 0, 7, 2, 5, 9]
Final Improved Documents: [1, 8, 3, 6]


Example 103
Sorted Documents: [10, 5, 0, 7, 2, 9, 6, 1, 8, 4, 3]
Removed Distracting Documents: [10, 5, 0, 7, 2, 9]
Final Improved Documents: [6, 1, 8, 4, 3]


Example 104
Sorted Documents: [4, 10, 5, 0, 9, 7, 2, 6, 1, 8, 3]
Removed Distracting Documents: [4, 10, 5, 0, 9, 7, 2]
Final Improved Documents: [6, 1, 8, 3]


Example 105
Sorted Documents: [7, 0, 5, 2, 9, 10, 4, 1, 8, 3, 6]
Removed Distracting Documents: [7, 0, 5, 2, 9]
Final Improved Documents: [10, 4, 1, 8, 3, 6]


Example 106
Sorted Documents: [7, 5, 1, 3, 4, 10, 2, 0, 9, 6, 8]
Removed Distracting Documents: [7, 5, 1, 3, 4]
Final Improved Documents: [10, 2, 0, 9, 6, 8]


Example 107
Sorted Documents: [8, 0, 10, 5, 1, 3, 4, 7, 9, 2, 6]
Removed Distracting Documents: [8, 0, 10, 5]
Final Improved Documents: [1, 3, 4, 7, 9, 2, 6]


Example 108
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 9, 3]


Example 109
Sorted Documents: [8, 10, 0, 3, 1, 4, 5, 7, 2, 9, 6]
Removed Distracting Documents: [8, 10, 0, 3]
Final Improved Documents: [1, 4, 5, 7, 2, 9, 6]


Example 110
Sorted Documents: [9, 4, 0, 7, 2, 10, 6, 1, 8, 3, 5]
Removed Distracting Documents: [9, 4, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 3, 5]


Example 111
Sorted Documents: [4, 10, 6, 0, 8, 2, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 10, 6, 0, 8, 2]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 112
Sorted Documents: [4, 10, 6, 0, 8, 2, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 10, 6, 0, 8, 2]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 113
Sorted Documents: [2, 4, 0, 6, 8, 10, 5, 1, 9, 7, 3]
Removed Distracting Documents: [2, 4, 0, 6, 8]
Final Improved Documents: [10, 5, 1, 9, 7, 3]


Example 114
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 9, 3]


Example 115
Sorted Documents: [4, 6, 0, 9, 2, 5, 7, 10, 8, 1, 3]
Removed Distracting Documents: [4, 6, 0, 9, 2]
Final Improved Documents: [5, 7, 10, 8, 1, 3]


Example 116
Sorted Documents: [6, 10, 0, 8, 1, 4, 5, 7, 2, 9, 3]
Removed Distracting Documents: [6, 10, 0, 8]
Final Improved Documents: [1, 4, 5, 7, 2, 9, 3]


Example 117
Sorted Documents: [4, 1, 8, 2, 9, 10, 6, 0, 7, 3, 5]
Removed Distracting Documents: [4, 1, 8, 2, 9]
Final Improved Documents: [10, 6, 0, 7, 3, 5]


Example 118
Warning: No valid JSON found in LLM response.
{
            "document_1": 0.7,
            "document_2": 0.3,
            "document_3": 0.5,
            "document_4": 0.8,
            "document_5": 0.4,
            "document_6": 0.6,
            "document_7": 0.2,
            "document_8": 0.9,
            "document_9": 0.5,
            "document_10": 0.3,
            "document_11": 0.7
         }

Explanation:

* Each document is assigned a score between 0 and 1, indicating the likelihood that it is a distracting document for the given query. Scores closer to 0 indicate a higher likelihood of being a distracting document, while scores closer to 1 indicate a lower likelihood.
* Documents that are likely to contain relevant information for the query are assigned higher scores (closer to 1), while documents that are unlikely to contain relevant information are assigned lower scores (closer to 0).
* The scores for each document are based on the content of the document, rather than any inherent value of the document itself. For example, a document that contains a detailed analysis of the topic of interest may be assigned a higher score than a document that simply repeats the query.
* The scores are
Example 119
Sorted Documents: [7, 5, 1, 3, 4, 10, 2, 0, 9, 6, 8]
Removed Distracting Documents: [7, 5, 1, 3, 4]
Final Improved Documents: [10, 2, 0, 9, 6, 8]


Example 120
Sorted Documents: [7, 3, 1, 5, 9, 10, 4, 0, 8, 2, 6]
Removed Distracting Documents: [7, 3, 1, 5, 9]
Final Improved Documents: [10, 4, 0, 8, 2, 6]


Example 121
Sorted Documents: [7, 4, 1, 9, 6, 3, 10, 5, 0, 2, 8]
Removed Distracting Documents: [7, 4, 1, 9, 6, 3]
Final Improved Documents: [10, 5, 0, 2, 8]


Example 122
Sorted Documents: [7, 6, 5, 1, 4, 8, 10, 3, 2, 0, 9]
Removed Distracting Documents: [7, 6, 5]
Final Improved Documents: [1, 4, 8, 10, 3, 2, 0, 9]


Example 123
Sorted Documents: [9, 4, 0, 6, 2, 10, 7, 1, 8, 3, 5]
Removed Distracting Documents: [9, 4, 0, 6, 2, 10]
Final Improved Documents: [7, 1, 8, 3, 5]


Example 124
Sorted Documents: [4, 5, 0, 6, 2, 10, 7, 1, 9, 8, 3]
Removed Distracting Documents: [4, 5, 0, 6, 2]
Final Improved Documents: [10, 7, 1, 9, 8, 3]


Example 125
Sorted Documents: [0, 10, 6, 3, 9, 2, 8, 1, 7, 4, 5]
Removed Distracting Documents: [0, 10, 6, 3, 9]
Final Improved Documents: [2, 8, 1, 7, 4, 5]


Example 126
Sorted Documents: [6, 4, 0, 8, 2, 7, 1, 9, 3, 5, 10]
Removed Distracting Documents: [6, 4, 0, 8, 2]
Final Improved Documents: [7, 1, 9, 3, 5, 10]


Example 127
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2, 10]
Final Improved Documents: [6, 1, 8, 9, 3]


Example 128
Sorted Documents: [5, 1, 8, 3, 4, 7, 10, 2, 0, 9, 6]
Removed Distracting Documents: [5, 1, 8, 3, 4, 7]
Final Improved Documents: [10, 2, 0, 9, 6]


Example 129
Sorted Documents: [7, 5, 1, 3, 4, 2, 10, 0, 9, 6, 8]
Removed Distracting Documents: [7, 5, 1, 3, 4]
Final Improved Documents: [2, 10, 0, 9, 6, 8]


Example 130
Sorted Documents: [4, 6, 0, 2, 9, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 2, 9]
Final Improved Documents: [10, 8, 1, 7, 5, 3]


Example 131
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 9, 3]


Example 132
Sorted Documents: [4, 5, 0, 7, 2, 10, 6, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2]
Final Improved Documents: [10, 6, 1, 8, 9, 3]


Example 133
Sorted Documents: [0, 10, 1, 5, 9, 2, 6, 3, 7, 4, 8]
Removed Distracting Documents: [0]
Final Improved Documents: [10, 1, 5, 9, 2, 6, 3, 7, 4, 8]


Example 134
Sorted Documents: [7, 1, 3, 4, 10, 2, 9, 0, 8, 5, 6]
Removed Distracting Documents: [7, 1, 3, 4]
Final Improved Documents: [10, 2, 9, 0, 8, 5, 6]


Example 135
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2]
Final Improved Documents: [10, 7, 1, 9, 5, 3]


Example 136
Sorted Documents: [7, 1, 3, 4, 10, 2, 9, 0, 8, 5, 6]
Removed Distracting Documents: [7, 1, 3, 4, 10]
Final Improved Documents: [2, 9, 0, 8, 5, 6]


Example 137
Warning: No valid JSON found in LLM response.
{
            "index": 1,
            "score": 0.7
         },
         {
            "index": 2,
            "score": 0.3
         },
         {
            "index": 3,
            "score": 0.1
         },
         {
            "index": 4,
            "score": 0.9
         },
         {
            "index": 5,
            "score": 0.5
         },
         {
            "index": 6,
            "score": 0.2
         },
         {
            "index": 7,
            "score": 0.8
         },
         {
            "index": 8,
            "score": 0.4
         },
         {
            "index": 9,
            "score": 0.6
         },
         {
            "index": 10,
            "score": 0.3
         },
         {
            "index": 11,
            "score": 0.1
         }

Explanation:

* Document 1 has a low score (0.7) indicating that it is unlikely to contain the correct answer.
* Document 2 has a moderate score (0.3) indicating that it may contain some relevant information but is unlikely to be the primary
Example 138
Sorted Documents: [3, 8, 0, 5, 10, 4, 9, 1, 6, 2, 7]
Removed Distracting Documents: [3, 8, 0, 5, 10, 4, 9]
Final Improved Documents: [1, 6, 2, 7]


Example 139
Sorted Documents: [4, 5, 0, 6, 2, 10, 7, 1, 8, 9, 3]
Removed Distracting Documents: [4, 5, 0, 6, 2]
Final Improved Documents: [10, 7, 1, 8, 9, 3]


Example 140
Sorted Documents: [7, 5, 1, 3, 4, 10, 2, 0, 8, 6, 9]
Removed Distracting Documents: [7, 5, 1, 3, 4]
Final Improved Documents: [10, 2, 0, 8, 6, 9]


Example 141
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2]
Final Improved Documents: [10, 7, 1, 9, 5, 3]


Example 142
Sorted Documents: [4, 6, 0, 8, 2, 10, 7, 1, 9, 5, 3]
Removed Distracting Documents: [4, 6, 0, 8, 2, 10]
Final Improved Documents: [7, 1, 9, 5, 3]


Example 143
Sorted Documents: [4, 0, 8, 2, 5, 9, 1, 6, 10, 3, 7]
Removed Distracting Documents: [4, 0, 8, 2, 5, 9]
Final Improved Documents: [1, 6, 10, 3, 7]


Example 144
Sorted Documents: [6, 2, 10, 0, 8, 4, 5, 9, 3, 1, 7]
Removed Distracting Documents: [6, 2, 10, 0, 8, 4, 5, 9]
Final Improved Documents: [3, 1, 7]


Example 145
Sorted Documents: [4, 6, 0, 9, 2, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 9, 2]
Final Improved Documents: [10, 8, 1, 7, 5, 3]


Example 146
Sorted Documents: [3, 6, 7, 0, 1, 4, 10, 5, 8, 2, 9]
Removed Distracting Documents: [3, 6, 7]
Final Improved Documents: [0, 1, 4, 10, 5, 8, 2, 9]


Example 147
Sorted Documents: [4, 0, 6, 2, 9, 7, 1, 8, 3, 10, 5]
Removed Distracting Documents: [4, 0, 6, 2, 9]
Final Improved Documents: [7, 1, 8, 3, 10, 5]


Example 148
Sorted Documents: [4, 1, 9, 6, 3, 10, 7, 0, 8, 2, 5]
Removed Distracting Documents: [4, 1, 9, 6, 3]
Final Improved Documents: [10, 7, 0, 8, 2, 5]


Example 149
Sorted Documents: [4, 5, 0, 6, 2, 10, 7, 1, 9, 8, 3]
Removed Distracting Documents: [4, 5, 0, 6, 2]
Final Improved Documents: [10, 7, 1, 9, 8, 3]


Example 150
Sorted Documents: [4, 6, 0, 9, 2, 10, 8, 1, 7, 5, 3]
Removed Distracting Documents: [4, 6, 0, 9, 2]
Final Improved Documents: [10, 8, 1, 7, 5, 3]


Example 151
Sorted Documents: [4, 5, 0, 8, 6, 2, 10, 7, 1, 9, 3]
Removed Distracting Documents: [4, 5, 0, 8, 6, 2]
Final Improved Documents: [10, 7, 1, 9, 3]


Example 152
Sorted Documents: [4, 5, 0, 7, 2, 9, 10, 6, 1, 8, 3]
Removed Distracting Documents: [4, 5, 0, 7, 2, 9]
Final Improved Documents: [10, 6, 1, 8, 3]


Example 153
Sorted Documents: [4, 0, 7, 2, 5, 8, 10, 1, 6, 3, 9]
Removed Distracting Documents: [4, 0, 7, 2, 5, 8]
Final Improved Documents: [10, 1, 6, 3, 9]


Prompt dataset loaded
INFO:
DATA: data/154_train_dataset.json
MODEL: meta-llama/Llama-2-7b-chat-hf
USE RANDOM IN CONTEXT: False
USE ADORE: False
GOLD POSITION: 5
NUM DOCUMENTS IN CONTEXT: 11
DOCUMENTS WITHOUT ANSWER: True
BATCH SIZE: 18
SAVE EVERY: 250

  0%|          | 0/9 [00:00<?, ?it/s]
  0%|          | 0/9 [03:46<?, ?it/s]
Traceback (most recent call last):
  File "/home/goodh/vinc/5018RAG/src/generate_answers_llm_improved.py", line 224, in <module>
    main()
  File "/home/goodh/vinc/5018RAG/src/generate_answers_llm_improved.py", line 218, in main
    generate_and_save(args, llm, prompt_dataloader)
  File "/home/goodh/vinc/5018RAG/src/generate_answers_llm_improved.py", line 168, in generate_and_save
    generated_output = llm.generate(prompts, max_new_tokens=args.max_new_tokens)
  File "/home/goodh/vinc/5018RAG/src/llm.py", line 123, in generate
    generated_ids = self.model.generate(
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/transformers/generation/utils.py", line 2047, in generate
    result = self._sample(
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/transformers/generation/utils.py", line 3007, in _sample
    outputs = self(**model_inputs, return_dict=True)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/accelerate/hooks.py", line 170, in new_forward
    output = module._old_forward(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/transformers/models/llama/modeling_llama.py", line 1189, in forward
    outputs = self.model(
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/accelerate/hooks.py", line 170, in new_forward
    output = module._old_forward(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/transformers/models/llama/modeling_llama.py", line 1000, in forward
    layer_outputs = decoder_layer(
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/accelerate/hooks.py", line 170, in new_forward
    output = module._old_forward(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/transformers/models/llama/modeling_llama.py", line 745, in forward
    hidden_states = self.mlp(hidden_states)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/accelerate/hooks.py", line 170, in new_forward
    output = module._old_forward(*args, **kwargs)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/transformers/models/llama/modeling_llama.py", line 311, in forward
    down_proj = self.down_proj(self.act_fn(self.gate_proj(x)) * self.up_proj(x))
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 748.00 MiB. GPU 0 has a total capacity of 15.99 GiB of which 0 bytes is free. Including non-PyTorch memory, this process has 17179869184.00 GiB memory in use. Of the allocated memory 23.17 GiB is allocated by PyTorch, and 6.53 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
expt/tmp.sh: line 26: 11: command not found
Directory:  data/gen_res/Llama-2-7b-chat-hf/train/classic/contriever/11_doc
I'm using the following files:  []
Traceback (most recent call last):
  File "/home/goodh/vinc/5018RAG/src/read_generation_results.py", line 310, in <module>
    main()
  File "/home/goodh/vinc/5018RAG/src/read_generation_results.py", line 270, in main
    data_df = load_pickle_files(directory, filename_prefix)
  File "/home/goodh/vinc/5018RAG/src/read_generation_results.py", line 139, in load_pickle_files
    data_df['document_indices'] = data_df['document_indices'].apply(convert_tensors)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/pandas/core/frame.py", line 3893, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/pandas/core/indexes/range.py", line 418, in get_loc
    raise KeyError(key)
KeyError: 'document_indices'
Directory:  data/gen_res/Llama-2-7b-chat-hf/train/improved/contriever/11_doc
I'm using the following files:  []
Traceback (most recent call last):
  File "/home/goodh/vinc/5018RAG/src/read_generation_results_improved.py", line 310, in <module>
    main()
  File "/home/goodh/vinc/5018RAG/src/read_generation_results_improved.py", line 270, in main
    data_df = load_pickle_files(directory, filename_prefix)
  File "/home/goodh/vinc/5018RAG/src/read_generation_results_improved.py", line 139, in load_pickle_files
    data_df['document_indices'] = data_df['document_indices'].apply(convert_tensors)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/pandas/core/frame.py", line 3893, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/home/goodh/miniconda3/envs/5018rag/lib/python3.9/site-packages/pandas/core/indexes/range.py", line 418, in get_loc
    raise KeyError(key)
KeyError: 'document_indices'
